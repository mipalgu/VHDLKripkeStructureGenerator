{"sections":[],"variants":[{"paths":["\/documentation\/vhdlmemorystructures\/vhdlparsing\/vhdlfile\/init(decodername:numberofelements:elementsize:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"?(","kind":"text"},{"text":"decoderName","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"name","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11VHDLParsing12VariableNameV","text":"VariableName","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"numberOfElements","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"elements","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"elementSize","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"size","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"name","content":[{"type":"paragraph","inlineContent":[{"text":"The name of the decoder.","type":"text"}]}]},{"name":"elements","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of elements in the decoder."}]}]},{"name":"size","content":[{"inlineContent":[{"type":"text","text":"The size of each element in the decoder."}],"type":"paragraph"}]}]},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"text":"This initialiser creates a 32-bit decoder that assumes each element within the encoded 32-bit value","type":"text"},{"text":" ","type":"text"},{"text":"contains an enable bit at itâ€™s suffix. For example, the element ","type":"text"},{"code":"\"0110\"","type":"codeVoice"},{"text":" of length 4-bits would be","type":"text"},{"text":" ","type":"text"},{"text":"immediately followed by a 1-bit enable bit ","type":"text"},{"code":"'1'","type":"codeVoice"},{"text":". The ","type":"text"},{"code":"elementSize","type":"codeVoice"},{"text":" parameter should ignore this","type":"text"},{"text":" ","type":"text"},{"text":"enable bit when calculating the size of each element.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"For example, consider a 32-bit encoded value with 2 elements","type":"text"},{"text":" ","type":"text"},{"text":"each of size 4-bits. The encoded value may be: ","type":"text"},{"type":"codeVoice","code":"\"11011000110000000000000000000000\""},{"text":". The first element","type":"text"},{"text":" ","type":"text"},{"text":"is ","type":"text"},{"type":"codeVoice","code":"\"1101"},{"text":" with enable bit ","type":"text"},{"type":"codeVoice","code":"'1'"},{"text":", and the second element is ","type":"text"},{"type":"codeVoice","code":"\"0001\""},{"text":" with enable bit ","type":"text"},{"type":"codeVoice","code":"'1'"},{"text":". All other","type":"text"},{"text":" ","type":"text"},{"text":"entries are padding. The decoder will contain a ","type":"text"},{"type":"codeVoice","code":"data"},{"text":" input and 4 outputs named ","type":"text"},{"type":"codeVoice","code":"out0"},{"text":", ","type":"text"},{"type":"codeVoice","code":"out0en"},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"out1"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"out1en"},{"text":" representing the decoded elements and their enable bits respectively. Please note","type":"text"},{"text":" ","type":"text"},{"text":"that the element starting at the most-significant bit of the encoded value is considered element 0.","type":"text"}],"type":"paragraph"},{"type":"aside","content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"numberOfElements","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"elementSize","type":"codeVoice"},{"text":" parameters must be greater than 0 and fit within","type":"text"},{"text":" ","type":"text"},{"text":"a 32-bit encoded value.","type":"text"}],"type":"paragraph"}],"name":"Warning","style":"warning"}],"kind":"content"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/VHDLMemoryStructures\/documentation\/VHDLMemoryStructures\/VHDLParsing\/VHDLFile\/init(decoderName:numberOfElements:elementSize:)"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/VHDLMemoryStructures\/documentation\/VHDLMemoryStructures","doc:\/\/VHDLMemoryStructures\/documentation\/VHDLMemoryStructures\/VHDLParsing","doc:\/\/VHDLMemoryStructures\/documentation\/VHDLMemoryStructures\/VHDLParsing\/VHDLFile"]]},"abstract":[{"text":"Create a generic decoder.","type":"text"}],"metadata":{"extendedModule":"VHDLParsing","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"decoderName","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"VariableName","kind":"typeIdentifier","preciseIdentifier":"s:11VHDLParsing12VariableNameV"},{"text":", ","kind":"text"},{"text":"numberOfElements","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"elementSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"role":"symbol","externalID":"s:11VHDLParsing8VHDLFileV20VHDLMemoryStructuresE11decoderName16numberOfElements11elementSizeACSgAA08VariableF0V_S2itcfc","symbolKind":"init","modules":[{"name":"VHDLMemoryStructures","relatedModules":["VHDLParsing"]}],"title":"init(decoderName:numberOfElements:elementSize:)","roleHeading":"Initializer"},"references":{"doc://VHDLMemoryStructures/documentation/VHDLMemoryStructures/VHDLParsing/VHDLFile":{"abstract":[{"text":"Create a generic decoder.","type":"text"}],"fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","text":"VHDLFile","preciseIdentifier":"s:11VHDLParsing8VHDLFileV"}],"url":"\/documentation\/vhdlmemorystructures\/vhdlparsing\/vhdlfile","navigatorTitle":[{"kind":"identifier","text":"VHDLFile"}],"role":"symbol","type":"topic","identifier":"doc:\/\/VHDLMemoryStructures\/documentation\/VHDLMemoryStructures\/VHDLParsing\/VHDLFile","title":"VHDLFile","kind":"symbol"},"doc://VHDLMemoryStructures/documentation/VHDLMemoryStructures/VHDLParsing":{"abstract":[],"url":"\/documentation\/vhdlmemorystructures\/vhdlparsing","role":"collection","type":"topic","identifier":"doc:\/\/VHDLMemoryStructures\/documentation\/VHDLMemoryStructures\/VHDLParsing","title":"VHDLParsing","kind":"symbol"},"doc://VHDLMemoryStructures/documentation/VHDLMemoryStructures":{"abstract":[],"url":"\/documentation\/vhdlmemorystructures","role":"collection","type":"topic","identifier":"doc:\/\/VHDLMemoryStructures\/documentation\/VHDLMemoryStructures","title":"VHDLMemoryStructures","kind":"symbol"},"doc://VHDLMemoryStructures/documentation/VHDLMemoryStructures/VHDLParsing/VHDLFile/init(decoderName:numberOfElements:elementSize:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"decoderName","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11VHDLParsing12VariableNameV","text":"VariableName","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"numberOfElements","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"elementSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/vhdlmemorystructures\/vhdlparsing\/vhdlfile\/init(decodername:numberofelements:elementsize:)","role":"symbol","identifier":"doc:\/\/VHDLMemoryStructures\/documentation\/VHDLMemoryStructures\/VHDLParsing\/VHDLFile\/init(decoderName:numberOfElements:elementSize:)","title":"init(decoderName:numberOfElements:elementSize:)","abstract":[{"type":"text","text":"Create a generic decoder."}]}}}