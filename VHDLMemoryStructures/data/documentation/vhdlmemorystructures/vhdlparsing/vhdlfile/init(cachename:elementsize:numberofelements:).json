{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vhdlmemorystructures\/vhdlparsing\/vhdlfile\/init(cachename:elementsize:numberofelements:)"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","metadata":{"title":"init(cacheName:elementSize:numberOfElements:)","extendedModule":"VHDLParsing","roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"cacheName"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11VHDLParsing12VariableNameV","text":"VariableName"},{"kind":"text","text":", "},{"kind":"externalParam","text":"elementSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"numberOfElements"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}],"role":"symbol","symbolKind":"init","externalID":"s:11VHDLParsing8VHDLFileV20VHDLMemoryStructuresE9cacheName11elementSize16numberOfElementsACSgAA08VariableF0V_S2itcfc","modules":[{"relatedModules":["VHDLParsing"],"name":"VHDLMemoryStructures"}]},"abstract":[{"type":"text","text":"Create a cache of elements that may be mapped to underlying BRAM structures."}],"identifier":{"url":"doc:\/\/VHDLMemoryStructures\/documentation\/VHDLMemoryStructures\/VHDLParsing\/VHDLFile\/init(cacheName:elementSize:numberOfElements:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/VHDLMemoryStructures\/documentation\/VHDLMemoryStructures","doc:\/\/VHDLMemoryStructures\/documentation\/VHDLMemoryStructures\/VHDLParsing","doc:\/\/VHDLMemoryStructures\/documentation\/VHDLMemoryStructures\/VHDLParsing\/VHDLFile"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"?(","kind":"text"},{"text":"cacheName","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"name","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"VariableName","kind":"typeIdentifier","preciseIdentifier":"s:11VHDLParsing12VariableNameV"},{"text":", ","kind":"text"},{"text":"elementSize","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"size","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"numberOfElements","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"name","content":[{"type":"paragraph","inlineContent":[{"text":"The name of the cache.","type":"text"}]}]},{"name":"size","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The size of the elements stored within the cache."}]}]},{"name":"numberOfElements","content":[{"inlineContent":[{"type":"text","text":"The number of elements to store in the cache."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"text":"This initialiser creates a cache of elements that may be smaller than 32-bits and therefore needs to","type":"text"},{"text":" ","type":"text"},{"text":"be encoded into an appropriate 32-bit aligned memory structure. The interface of the cache hides the","type":"text"},{"text":" ","type":"text"},{"text":"underlying mapping into BRAM and instead provides addresses based on the specific element rather","type":"text"},{"text":" ","type":"text"},{"text":"than the underlying memory address. For example, 3 elements each 4 bits are addresses as element 0, 1,","type":"text"},{"text":" ","type":"text"},{"text":"and 2 respectively rather than sharing address 0 within a 32-bit aligned memory space.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The entity of this cache is defined based on element size and reachable address space based on the","type":"text"},{"text":" ","type":"text"},{"text":"number of elements. An entity with 12 3-bit elements may look like the example below:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"VHDL","code":["entity Cache is","    port(","        clk: in std_logic;","        address: in std_logic_vector(3 downto 0);","        data: in std_logic_vector(2 downto 0);","        we: in std_logic;","        ready: in std_logic;","        busy: out std_logic;","        value: out std_logic_vector(2 downto 0);","        value_en: out std_logic;","        lastAddress: out std_logic_vector(3 downto 0)","    );","end Cache;"]},{"inlineContent":[{"text":"Each element within the cache is encoded together with an enable bit that indicates whether the","type":"text"},{"text":" ","type":"text"},{"text":"element is present or not. This allows the cache to be partially filled and the enable bit to be used","type":"text"},{"text":" ","type":"text"},{"text":"to determine which elements are within the dangling memory space. Read and write operations are","type":"text"},{"text":" ","type":"text"},{"text":"supported through a ","type":"text"},{"type":"codeVoice","code":"we"},{"text":" (write enable) bit that is ","type":"text"},{"type":"codeVoice","code":"high"},{"text":" when writing and ","type":"text"},{"type":"codeVoice","code":"low"},{"text":" when reading. The","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"value"},{"text":" output describes the current element at the given address and is paired with ","type":"text"},{"type":"codeVoice","code":"value_en"},{"text":" to","type":"text"},{"text":" ","type":"text"},{"text":"indicate whether an element exists at the given address. The ","type":"text"},{"type":"codeVoice","code":"data"},{"text":" signal specifies the","type":"text"},{"text":" ","type":"text"},{"text":"new data to be written to the cache when ","type":"text"},{"type":"codeVoice","code":"we"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"high"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"To perform a write, the write "},{"type":"codeVoice","code":"address"},{"type":"text","text":" and "},{"type":"codeVoice","code":"data`` is set with the new element and the "},{"type":"text","text":"we"},{"type":"codeVoice","code":"and"},{"type":"text","text":"ready"},{"type":"codeVoice","code":"signals are set"},{"type":"text","text":"high"},{"type":"codeVoice","code":". The write will only be initiated when the "},{"type":"text","text":"busy"},{"type":"codeVoice","code":"signal is"},{"type":"text","text":"low"},{"type":"codeVoice","code":". When a write happens, the "},{"type":"text","text":"busy"},{"type":"codeVoice","code":"signal will go"},{"type":"text","text":"high"},{"type":"codeVoice","code":"until the write is complete. The"},{"type":"text","text":"lastAddress`"},{"type":"text","text":" "},{"type":"text","text":"signal will contain the address of the last element in the cache."}],"type":"paragraph"},{"inlineContent":[{"text":"To perform a read, the address signal is set to the read address, the ","type":"text"},{"code":"we","type":"codeVoice"},{"text":" signal is set ","type":"text"},{"code":"low","type":"codeVoice"},{"text":" and the","type":"text"},{"text":" ","type":"text"},{"code":"ready","type":"codeVoice"},{"text":" signal is set ","type":"text"},{"code":"high","type":"codeVoice"},{"text":". The read will only be performed when the ","type":"text"},{"code":"busy","type":"codeVoice"},{"text":" signal is ","type":"text"},{"code":"low","type":"codeVoice"},{"text":". The","type":"text"},{"text":" ","type":"text"},{"text":"read will take exactly 1 clock cycle to finish and will not change the ","type":"text"},{"code":"busy","type":"codeVoice"},{"text":" signal during the","type":"text"},{"text":" ","type":"text"},{"text":"operation. The ","type":"text"},{"code":"value","type":"codeVoice"},{"text":" signal will contain the element at the given address and the ","type":"text"},{"code":"value_en","type":"codeVoice"},{"text":" signal","type":"text"},{"text":" ","type":"text"},{"text":"will be ","type":"text"},{"code":"high","type":"codeVoice"},{"text":" if the element is present and ","type":"text"},{"code":"low","type":"codeVoice"},{"text":" if the element is not present.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"During the operation of the cache, any detected errors will cause a permanent "},{"type":"codeVoice","code":"busy"},{"type":"text","text":" signal blocking"},{"type":"text","text":" "},{"type":"text","text":"all further use of the cache."}],"type":"paragraph"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Please ensure ","type":"text"},{"type":"codeVoice","code":"elementSize"},{"text":" is less than or equal to 30 bits as large elements are","type":"text"},{"text":" ","type":"text"},{"text":"currently not supported and will cause the program to crash.","type":"text"}]}],"name":"Warning","style":"warning"}]}],"references":{"doc://VHDLMemoryStructures/documentation/VHDLMemoryStructures/VHDLParsing/VHDLFile":{"abstract":[{"text":"Create a generic decoder.","type":"text"}],"fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","text":"VHDLFile","preciseIdentifier":"s:11VHDLParsing8VHDLFileV"}],"url":"\/documentation\/vhdlmemorystructures\/vhdlparsing\/vhdlfile","navigatorTitle":[{"kind":"identifier","text":"VHDLFile"}],"role":"symbol","type":"topic","identifier":"doc:\/\/VHDLMemoryStructures\/documentation\/VHDLMemoryStructures\/VHDLParsing\/VHDLFile","title":"VHDLFile","kind":"symbol"},"doc://VHDLMemoryStructures/documentation/VHDLMemoryStructures/VHDLParsing":{"abstract":[],"url":"\/documentation\/vhdlmemorystructures\/vhdlparsing","role":"collection","type":"topic","identifier":"doc:\/\/VHDLMemoryStructures\/documentation\/VHDLMemoryStructures\/VHDLParsing","title":"VHDLParsing","kind":"symbol"},"doc://VHDLMemoryStructures/documentation/VHDLMemoryStructures":{"abstract":[],"url":"\/documentation\/vhdlmemorystructures","role":"collection","type":"topic","identifier":"doc:\/\/VHDLMemoryStructures\/documentation\/VHDLMemoryStructures","title":"VHDLMemoryStructures","kind":"symbol"},"doc://VHDLMemoryStructures/documentation/VHDLMemoryStructures/VHDLParsing/VHDLFile/init(cacheName:elementSize:numberOfElements:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"cacheName","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11VHDLParsing12VariableNameV","text":"VariableName","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"elementSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"numberOfElements","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/vhdlmemorystructures\/vhdlparsing\/vhdlfile\/init(cachename:elementsize:numberofelements:)","role":"symbol","identifier":"doc:\/\/VHDLMemoryStructures\/documentation\/VHDLMemoryStructures\/VHDLParsing\/VHDLFile\/init(cacheName:elementSize:numberOfElements:)","title":"init(cacheName:elementSize:numberOfElements:)","abstract":[{"type":"text","text":"Create a cache of elements that may be mapped to underlying BRAM structures."}]}}}