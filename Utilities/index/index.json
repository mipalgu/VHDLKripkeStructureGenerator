{"interfaceLanguages":{"swift":[{"children":[{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/utilities\/swift\/array\/concatenated","title":"var concatenated: Expression","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/utilities\/swift\/array\/joined(fn:)","title":"func joined(fn: (Element, Element) -> Element) -> Element","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/utilities\/swift\/array\/snapshotcontrolsignals(statetype:internalstatetype:)","title":"static func snapshotControlSignals(stateType: Type, internalStateType: Type) -> [RecordTypeDeclaration]","type":"method"}],"path":"\/documentation\/utilities\/swift\/array","title":"Array","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/utilities\/swift\/int\/bits","title":"var bits: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/utilities\/swift\/int\/max(other:)","title":"func max(other: Int) -> Int","type":"method"}],"path":"\/documentation\/utilities\/swift\/int","title":"Int","type":"extension"}],"path":"\/documentation\/utilities\/swift","title":"Swift","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/utilities\/vhdlmachines\/machinevhdlrepresentable\/allconstants","title":"var allConstants: [HeadStatement]","type":"property"},{"path":"\/documentation\/utilities\/vhdlmachines\/machinevhdlrepresentable\/externalvariables","title":"var externalVariables: [PortSignal]","type":"property"},{"path":"\/documentation\/utilities\/vhdlmachines\/machinevhdlrepresentable\/internalstatetype","title":"var internalStateType: Type?","type":"property"},{"path":"\/documentation\/utilities\/vhdlmachines\/machinevhdlrepresentable\/numberofstatebits","title":"var numberOfStateBits: Int?","type":"property"},{"path":"\/documentation\/utilities\/vhdlmachines\/machinevhdlrepresentable\/statetype","title":"var stateType: SignalType?","type":"property"},{"path":"\/documentation\/utilities\/vhdlmachines\/machinevhdlrepresentable\/targetstateaddresses","title":"var targetStateAddresses: Int","type":"property"},{"path":"\/documentation\/utilities\/vhdlmachines\/machinevhdlrepresentable\/targetstatesperaddress","title":"var targetStatesPerAddress: Int","type":"property"}],"path":"\/documentation\/utilities\/vhdlmachines\/machinevhdlrepresentable","title":"MachineVHDLRepresentable","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/utilities\/vhdlmachines\/machine\/numberofpendingstates","title":"var numberOfPendingStates: Int","type":"property"},{"path":"\/documentation\/utilities\/vhdlmachines\/machine\/numberofstatebits","title":"var numberOfStateBits: Int","type":"property"},{"path":"\/documentation\/utilities\/vhdlmachines\/machine\/numberoftargetstates","title":"var numberOfTargetStates: Int","type":"property"},{"path":"\/documentation\/utilities\/vhdlmachines\/machine\/pendingstateencoding","title":"var pendingStateEncoding: SignalType","type":"property"},{"path":"\/documentation\/utilities\/vhdlmachines\/machine\/pendingstatesize","title":"var pendingStateSize: VectorSize","type":"property"},{"path":"\/documentation\/utilities\/vhdlmachines\/machine\/reachablestates","title":"var reachableStates: [State]","type":"property"},{"path":"\/documentation\/utilities\/vhdlmachines\/machine\/statevariables","title":"var stateVariables: [VariableName : [LocalSignal]]","type":"property"},{"path":"\/documentation\/utilities\/vhdlmachines\/machine\/statevariablesamount","title":"var stateVariablesAmount: Int","type":"property"},{"path":"\/documentation\/utilities\/vhdlmachines\/machine\/statesencoding","title":"var statesEncoding: SignalType","type":"property"},{"path":"\/documentation\/utilities\/vhdlmachines\/machine\/targetstatebits","title":"var targetStateBits: Int","type":"property"},{"path":"\/documentation\/utilities\/vhdlmachines\/machine\/targetstateencoding","title":"var targetStateEncoding: SignalType","type":"property"},{"path":"\/documentation\/utilities\/vhdlmachines\/machine\/targetstatesize","title":"var targetStateSize: VectorSize","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/utilities\/vhdlmachines\/machine\/istransitionreachable(from:transition:)-5xvok","title":"func isTransitionReachable(from: State, transition: Transition) -> Bool","type":"method"},{"path":"\/documentation\/utilities\/vhdlmachines\/machine\/istransitionreachable(from:transition:)-mppc","title":"func isTransitionReachable(from: Int, transition: Transition) -> Bool","type":"method"}],"path":"\/documentation\/utilities\/vhdlmachines\/machine","title":"Machine","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/utilities\/vhdlmachines\/state\/encodednumberofaddresses(in:)","title":"func encodedNumberOfAddresses<T>(in: T) -> Int","type":"method"},{"path":"\/documentation\/utilities\/vhdlmachines\/state\/encodedsize(in:)","title":"func encodedSize<T>(in: T) -> Int","type":"method"},{"path":"\/documentation\/utilities\/vhdlmachines\/state\/encodedtype(in:)","title":"func encodedType<T>(in: T) -> SignalType","type":"method"},{"path":"\/documentation\/utilities\/vhdlmachines\/state\/executionsize(in:maxexecutionsize:)","title":"func executionSize<T>(in: T, maxExecutionSize: Int?) -> VectorSize","type":"method"},{"path":"\/documentation\/utilities\/vhdlmachines\/state\/executiontypes(in:maxexecutionsize:)","title":"func executionTypes<T>(in: T, maxExecutionSize: Int?) -> ArrayDefinition","type":"method"},{"path":"\/documentation\/utilities\/vhdlmachines\/state\/memorystorage(for:in:)","title":"func memoryStorage<T>(for: State, in: T) -> VectorSize","type":"method"},{"path":"\/documentation\/utilities\/vhdlmachines\/state\/numberofmemoryaddresses(for:in:)","title":"func numberOfMemoryAddresses<T>(for: State, in: T) -> Int","type":"method"},{"path":"\/documentation\/utilities\/vhdlmachines\/state\/numberofstates(in:)","title":"func numberOfStates<T>(in: T) -> Int?","type":"method"},{"path":"\/documentation\/utilities\/vhdlmachines\/state\/numberofstatesforringlet(in:)","title":"func numberOfStatesForRinglet<T>(in: T) -> Int","type":"method"},{"path":"\/documentation\/utilities\/vhdlmachines\/state\/representation(in:)","title":"func representation<T>(in: T) -> SignalLiteral","type":"method"}],"path":"\/documentation\/utilities\/vhdlmachines\/state","title":"State","type":"extension"}],"path":"\/documentation\/utilities\/vhdlmachines","title":"VHDLMachines","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/utilities\/vhdlparsing\/componentdefinition\/init(entity:)","title":"init(entity: Entity)","type":"init"}],"path":"\/documentation\/utilities\/vhdlparsing\/componentdefinition","title":"ComponentDefinition","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/utilities\/vhdlparsing\/record\/init(readsnapshotfor:)","title":"init?<T>(readSnapshotFor: T)","type":"init"},{"path":"\/documentation\/utilities\/vhdlparsing\/record\/init(readsnapshotfor:in:)","title":"init<T>(readSnapshotFor: State, in: T)","type":"init"},{"path":"\/documentation\/utilities\/vhdlparsing\/record\/init(ringletfor:)","title":"init(ringletFor: State)","type":"init"},{"path":"\/documentation\/utilities\/vhdlparsing\/record\/init(totalsnapshotfor:)","title":"init?<T>(totalSnapshotFor: T)","type":"init"},{"path":"\/documentation\/utilities\/vhdlparsing\/record\/init(writesnapshotfor:)","title":"init?<T>(writeSnapshotFor: T)","type":"init"},{"path":"\/documentation\/utilities\/vhdlparsing\/record\/init(writesnapshotfor:in:)","title":"init?<T>(writeSnapshotFor: State, in: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/utilities\/vhdlparsing\/record\/bits","title":"var bits: Int","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/record\/encodedbits","title":"var encodedBits: Int","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/record\/encodedindexes","title":"var encodedIndexes: [(RecordTypeDeclaration, VectorIndex)]","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/record\/encodedtypes","title":"var encodedTypes: [(RecordTypeDeclaration, Type)]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/utilities\/vhdlparsing\/record\/bitsindex(for:isdownto:adding:)","title":"func bitsIndex(for: VariableName, isDownto: Bool, adding: Int) -> VectorIndex?","type":"method"},{"path":"\/documentation\/utilities\/vhdlparsing\/record\/encodedindexes(ignoring:offset:)","title":"func encodedIndexes(ignoring: Set<VariableName>, offset: Int) -> [(RecordTypeDeclaration, VectorIndex)]","type":"method"}],"path":"\/documentation\/utilities\/vhdlparsing\/record","title":"Record","type":"extension"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/utilities\/vhdlparsing\/usestatement\/numericstd","title":"static let numericStd: UseStatement","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/usestatement\/primitivetypes","title":"static let primitiveTypes: UseStatement","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/usestatement\/stdlogic1164","title":"static let stdLogic1164: UseStatement","type":"property"}],"path":"\/documentation\/utilities\/vhdlparsing\/usestatement","title":"UseStatement","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/init(name:post:)","title":"init?(name: VariableName, post: String)","type":"init"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/init(portnamefor:in:)","title":"init<T>(portNameFor: LocalSignal, in: T)","type":"init"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/init(pre:name:)","title":"init?(pre: String, name: VariableName)","type":"init"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/init(pre:name:post:)","title":"init?(pre: String, name: VariableName, post: String)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/addr","title":"static let addr: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/address","title":"static let address: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/behavioral","title":"static let behavioral: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/bittypes","title":"static let bitTypes: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/bittypest","title":"static let bitTypesT: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/booltostdlogic","title":"static let boolToStdLogic: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/booleantypes","title":"static let booleanTypes: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/booleantypest","title":"static let booleanTypesT: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/busy","title":"static let busy: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/cache","title":"static let cache: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/cacheindex","title":"static let cacheIndex: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/cacheinst","title":"static let cacheInst: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/cachevalue","title":"static let cacheValue: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/checkpreviousringlets","title":"static let checkPreviousRinglets: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/chooseaccess","title":"static let chooseAccess: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/clk","title":"static let clk: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/currentexecuteonentry","title":"static let currentExecuteOnEntry: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/currentindex","title":"static let currentIndex: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/currentringlet","title":"static let currentRinglet: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/currentringletaddress","title":"static let currentRingletAddress: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/currentringletindex","title":"static let currentRingletIndex: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/currentringlettype","title":"static let currentRingletType: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/currentstate","title":"static let currentState: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/currentstatein","title":"static let currentStateIn: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/currentstateout","title":"static let currentStateOut: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/data","title":"static let data: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/denominator","title":"static let denominator: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/di","title":"static let di: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/divisor","title":"static let divisor: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/do","title":"static let `do`: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/encodedtostdlogic","title":"static let encodedToStdLogic: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/encodedtostdulogic","title":"static let encodedToStdULogic: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/error","title":"static let error: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/executeonentry","title":"static let executeOnEntry: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/executing","title":"static let executing: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/finished","title":"static let finished: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/finishedtype","title":"static let finishedType: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/genindex","title":"static let genIndex: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/genvalue","title":"static let genValue: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/goalinternal","title":"static let goalInternal: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/goalinternalstate","title":"static let goalInternalState: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/hasstarted","title":"static let hasStarted: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/i","title":"static let i: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/ieee","title":"static let ieee: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/index","title":"static let index: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/initial","title":"static let initial: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/internalstate","title":"static let internalState: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/internalstatein","title":"static let internalStateIn: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/internalstateout","title":"static let internalStateOut: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/isduplicate","title":"static let isDuplicate: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/isinitial","title":"static let isInitial: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/lastaccessibleaddress","title":"static let lastAccessibleAddress: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/lastaddress","title":"static let lastAddress: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/lastenabled","title":"static let lastEnabled: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/machine","title":"static let machine: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/memoryindex","title":"static let memoryIndex: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/newringlets","title":"static let newRinglets: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/nextstate","title":"static let nextState: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/numerator","title":"static let numerator: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/observed","title":"static let observed: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/pendingstate","title":"static let pendingState: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/pendingstates","title":"static let pendingStates: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/pendingstatestype","title":"static let pendingStatesType: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/previousreadaddress","title":"static let previousReadAddress: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/previousringlet","title":"static let previousRinglet: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/previousringletin","title":"static let previousRingletIn: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/previousringletout","title":"static let previousRingletOut: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/primitivetypes","title":"static let primitiveTypes: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/ram","title":"static let ram: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/rawtype","title":"static let rawType: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/read","title":"static let read: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/readaddress","title":"static let readAddress: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/readcache","title":"static let readCache: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/readenable","title":"static let readEnable: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/readsnapshot","title":"static let readSnapshot: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/readsnapshotsignal","title":"static let readSnapshotSignal: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/readsnapshotstate","title":"static let readSnapshotState: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/readsnapshottype","title":"static let readSnapshotType: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/readsnapshots","title":"static let readSnapshots: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/readsnapshotstype","title":"static let readSnapshotsType: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/readvalue","title":"static let readValue: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/ready","title":"static let ready: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/remainder","title":"static let remainder: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/reset","title":"static let reset: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/resize","title":"static let resize: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/result","title":"static let result: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/ringlet","title":"static let ringlet: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/ringletcounter","title":"static let ringletCounter: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/ringletindex","title":"static let ringletIndex: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/ringlettype","title":"static let ringletType: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/ringlets","title":"static let ringlets: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/ringletsworkingtype","title":"static let ringletsWorkingType: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/rst","title":"static let rst: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/setinternalsignals","title":"static let setInternalSignals: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/setnextringlet","title":"static let setNextRinglet: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/setnexttargetstate","title":"static let setNextTargetState: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/setringletramvalue","title":"static let setRingletRAMValue: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/setringletvalue","title":"static let setRingletValue: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/shiftright","title":"static let shiftRight: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/startexecuting","title":"static let startExecuting: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/state","title":"static let state: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/stateexecutiontype","title":"static let stateExecutionType: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/statetracker","title":"static let stateTracker: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/stdlogicencoded","title":"static let stdLogicEncoded: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/stdlogictobool","title":"static let stdLogicToBool: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/stdlogictypes","title":"static let stdLogicTypes: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/stdlogictypest","title":"static let stdLogicTypesT: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/stdulogicencoded","title":"static let stdULogicEncoded: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/targetstate","title":"static let targetState: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/targetstatein","title":"static let targetStateIn: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/targetstateout","title":"static let targetStateOut: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/targetstatesbramelementtype","title":"static let targetStatesBRAMElementType: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/targetstatesbramenabledtype","title":"static let targetStatesBRAMEnabledType: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/targetstatesbramtype","title":"static let targetStatesBRAMType: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/targetstatescachemonitor","title":"static let targetStatesCacheMonitor: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/targetstatestype","title":"static let targetStatesType: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/targets","title":"static let targets: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/targetstype","title":"static let targetsType: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/tointeger","title":"static let toInteger: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/tosigned","title":"static let toSigned: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/tounsigned","title":"static let toUnsigned: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/topindex","title":"static let topIndex: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/totalsnapshot","title":"static let totalSnapshot: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/tracker","title":"static let tracker: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/unsignedaddress","title":"static let unsignedAddress: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/unsignedlastaddress","title":"static let unsignedLastAddress: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/value","title":"static let value: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/valueen","title":"static let valueEn: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/vector","title":"static let vector: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/waitforaccess","title":"static let waitForAccess: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/waitforfinish","title":"static let waitForFinish: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/waitformachinestart","title":"static let waitForMachineStart: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/waitfornewdatatype","title":"static let waitForNewDataType: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/waitfornewringlets","title":"static let waitForNewRinglets: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/waitforread","title":"static let waitForRead: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/waitforreadenable","title":"static let waitForReadEnable: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/waitforstart","title":"static let waitForStart: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/waittostart","title":"static let waitToStart: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/waitwhilebusy","title":"static let waitWhileBusy: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/we","title":"static let we: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/workingringlets","title":"static let workingRinglets: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/writeelement","title":"static let writeElement: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/writesnapshot","title":"static let writeSnapshot: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/writesnapshotsignal","title":"static let writeSnapshotSignal: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/writesnapshotstate","title":"static let writeSnapshotState: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/writesnapshottype","title":"static let writeSnapshotType: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/writesnapshots","title":"static let writeSnapshots: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/writesnapshotstype","title":"static let writeSnapshotsType: VariableName","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/zero","title":"static let zero: VariableName","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/currentstatein(for:)","title":"static func currentStateIn<T>(for: T) -> VariableName","type":"method"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/currentstateout(for:)","title":"static func currentStateOut<T>(for: T) -> VariableName","type":"method"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/internalstatein(for:)","title":"static func internalStateIn<T>(for: T) -> VariableName","type":"method"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/internalstateout(for:)","title":"static func internalStateOut<T>(for: T) -> VariableName","type":"method"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/previousringletin(for:)","title":"static func previousRingletIn<T>(for: T) -> VariableName","type":"method"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/previousringletout(for:)","title":"static func previousRingletOut<T>(for: T) -> VariableName","type":"method"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/targetstatein(for:)","title":"static func targetStateIn<T>(for: T) -> VariableName","type":"method"},{"path":"\/documentation\/utilities\/vhdlparsing\/variablename\/targetstateout(for:)","title":"static func targetStateOut<T>(for: T) -> VariableName","type":"method"}],"path":"\/documentation\/utilities\/vhdlparsing\/variablename","title":"VariableName","type":"extension"},{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/utilities\/vhdlparsing\/headstatement\/init(array:)","title":"init(array: ArrayDefinition)","type":"init"}],"path":"\/documentation\/utilities\/vhdlparsing\/headstatement","title":"HeadStatement","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/utilities\/vhdlparsing\/rangedtype\/init(encodedtype:)","title":"init(encodedType: RangedType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/utilities\/vhdlparsing\/rangedtype\/bits","title":"var bits: Int","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/rangedtype\/encodedbits","title":"var encodedBits: Int","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/rangedtype\/numberofvalues","title":"var numberOfValues: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/utilities\/vhdlparsing\/rangedtype\/conversion(value:)","title":"func conversion(value: Expression) -> Expression","type":"method"},{"path":"\/documentation\/utilities\/vhdlparsing\/rangedtype\/conversion(value:to:)","title":"func conversion(value: Expression, to: SignalType) -> Expression","type":"method"}],"path":"\/documentation\/utilities\/vhdlparsing\/rangedtype","title":"RangedType","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/utilities\/vhdlparsing\/signaltype\/init(encodedtype:)","title":"init(encodedType: SignalType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/utilities\/vhdlparsing\/signaltype\/bits","title":"var bits: Int","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/signaltype\/encodedbits","title":"var encodedBits: Int","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/signaltype\/numberofvalues","title":"var numberOfValues: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/utilities\/vhdlparsing\/signaltype\/conversion(value:)","title":"func conversion(value: Expression) -> Expression","type":"method"},{"path":"\/documentation\/utilities\/vhdlparsing\/signaltype\/conversion(value:to:)","title":"func conversion(value: Expression, to: SignalType) -> Expression","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/utilities\/vhdlparsing\/signaltype\/logicvector2","title":"static let logicVector2: SignalType","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/signaltype\/logicvector32","title":"static let logicVector32: SignalType","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/signaltype\/logicvector4","title":"static let logicVector4: SignalType","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/signaltype\/logicvector8","title":"static let logicVector8: SignalType","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/signaltype\/unsigned32bit","title":"static let unsigned32bit: SignalType","type":"property"}],"path":"\/documentation\/utilities\/vhdlparsing\/signaltype","title":"SignalType","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/utilities\/vhdlparsing\/type\/init(encodedtype:)","title":"init?(encodedType: Type)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/utilities\/vhdlparsing\/type\/bits","title":"var bits: Int","type":"property"},{"path":"\/documentation\/utilities\/vhdlparsing\/type\/signaltype","title":"var signalType: SignalType","type":"property"}],"path":"\/documentation\/utilities\/vhdlparsing\/type","title":"Type","type":"extension"}],"path":"\/documentation\/utilities\/vhdlparsing","title":"VHDLParsing","type":"extension"}],"path":"\/documentation\/utilities","title":"Utilities","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}